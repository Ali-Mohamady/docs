I"6c<h2 id="overview">Overview</h2>

<p>The <strong>MB Admin Columns</strong> extension helps you display the custom fields’ values in the table of the post list in <strong>All Posts</strong> screen in the <strong>back end</strong>. It works with any custom post types and supports for terms and users as well (requires <a href="https://metabox.io/plugins/mb-term-meta/">MB Term Meta</a> and <a href="https://metabox.io/plugins/mb-user-meta/">MB User Meta</a> correspondingly).</p>

<p>Showing fields’ values in the post table give users a better overview of the posts without going to edit each post. It saves you time to verify / view the data.</p>

<p><img src="https://i.imgur.com/7joEGrL.png" alt="meta box admin columns" /></p>

<p>For more details, please see the <a href="https://metabox.io/plugins/mb-admin-columns/">extension page</a>.</p>

<h2 id="installation">Installation</h2>
<p>Before installing the extension, you need to install Meta Box plugin first.</p>

<ol>
  <li>Go to <em>Plugins → Add New</em> and search for <strong>Meta Box</strong></li>
  <li>Click <strong>Install Now</strong> button to install the plugin</li>
  <li>After installing, click <strong>Activate Plugin</strong> to activate the plugin</li>
</ol>

<p>The extension is just a WordPress plugin, you can install it like a normal WordPress plugin.</p>

<ol>
  <li>Go to <em>Plugins</em>, click <strong>Add new</strong>, then click <strong>Upload plugin</strong>.</li>
  <li>Choose the <code class="highlighter-rouge">.zip</code> file you downloaded and click <strong>Install now</strong></li>
  <li>After finishing upload, click <strong>Activate</strong> to finish.</li>
</ol>

<h2 id="example">Example</h2>

<p>Assuming we have a custom post type ‘Book’ registered with the following code:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">add_action</span><span class="p">(</span> <span class="s1">'init'</span><span class="p">,</span> <span class="s1">'prefix_register_book_post_type'</span> <span class="p">);</span>
<span class="k">function</span> <span class="nf">prefix_register_book_post_type</span><span class="p">()</span> <span class="p">{</span>
    <span class="nv">$labels</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'name'</span>          <span class="o">=&gt;</span> <span class="s1">'Books'</span><span class="p">,</span>
        <span class="s1">'singular_name'</span> <span class="o">=&gt;</span> <span class="s1">'Book'</span><span class="p">,</span>
        <span class="s1">'menu_name'</span>     <span class="o">=&gt;</span> <span class="s1">'Book'</span><span class="p">,</span>
    <span class="p">);</span>
    <span class="nv">$args</span>   <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'labels'</span>     <span class="o">=&gt;</span> <span class="nv">$labels</span><span class="p">,</span>
        <span class="s1">'supports'</span>   <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span> <span class="s1">'title'</span><span class="p">,</span> <span class="s1">'editor'</span><span class="p">,</span> <span class="p">),</span>
        <span class="s1">'public'</span>     <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
        <span class="s1">'taxonomies'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span> <span class="s1">'category'</span> <span class="p">),</span>
        <span class="s1">'menu_icon'</span>  <span class="o">=&gt;</span> <span class="s1">'dashicons-book-alt'</span><span class="p">,</span>
    <span class="p">);</span>
    <span class="nx">register_post_type</span><span class="p">(</span> <span class="s1">'book'</span><span class="p">,</span> <span class="nv">$args</span> <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Here is the code to register a meta box, custom fields with additional parameters for admin columns:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">add_filter</span><span class="p">(</span> <span class="s1">'rwmb_meta_boxes'</span><span class="p">,</span> <span class="s1">'prefix_book_meta_boxes'</span> <span class="p">);</span>
<span class="k">function</span> <span class="nf">prefix_book_meta_boxes</span><span class="p">(</span> <span class="nv">$meta_boxes</span> <span class="p">)</span> <span class="p">{</span>
    <span class="nv">$meta_boxes</span><span class="p">[]</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'title'</span>      <span class="o">=&gt;</span> <span class="s1">'Book Info'</span><span class="p">,</span>
        <span class="s1">'post_types'</span> <span class="o">=&gt;</span> <span class="s1">'book'</span><span class="p">,</span>
        <span class="s1">'fields'</span>     <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
            <span class="k">array</span><span class="p">(</span>
                <span class="s1">'name'</span>          <span class="o">=&gt;</span> <span class="s1">'Cover'</span><span class="p">,</span>
                <span class="s1">'id'</span>            <span class="o">=&gt;</span> <span class="s1">'cover'</span><span class="p">,</span>
                <span class="s1">'type'</span>          <span class="o">=&gt;</span> <span class="s1">'image_advanced'</span><span class="p">,</span>
                <span class="s1">'admin_columns'</span> <span class="o">=&gt;</span> <span class="s1">'before title'</span><span class="p">,</span> <span class="c1">// Show this column before 'Title' column</span>
            <span class="p">),</span>
            <span class="k">array</span><span class="p">(</span>
                <span class="s1">'name'</span>          <span class="o">=&gt;</span> <span class="s1">'Author'</span><span class="p">,</span>
                <span class="s1">'id'</span>            <span class="o">=&gt;</span> <span class="s1">'book_author'</span><span class="p">,</span>
                <span class="s1">'type'</span>          <span class="o">=&gt;</span> <span class="s1">'text'</span><span class="p">,</span>
                <span class="s1">'admin_columns'</span> <span class="o">=&gt;</span> <span class="s1">'after title'</span><span class="p">,</span> <span class="c1">// Show this column after 'Title' column</span>
            <span class="p">),</span>
            <span class="k">array</span><span class="p">(</span>
                <span class="s1">'name'</span>          <span class="o">=&gt;</span> <span class="s1">'Category'</span><span class="p">,</span>
                <span class="s1">'id'</span>            <span class="o">=&gt;</span> <span class="s1">'category'</span><span class="p">,</span>
                <span class="s1">'type'</span>          <span class="o">=&gt;</span> <span class="s1">'taxonomy'</span><span class="p">,</span>
                <span class="s1">'taxonomy'</span>      <span class="o">=&gt;</span> <span class="s1">'category'</span><span class="p">,</span>
                <span class="s1">'admin_columns'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
                    <span class="s1">'position'</span> <span class="o">=&gt;</span> <span class="s1">'replace categories'</span><span class="p">,</span> <span class="c1">// Replace default 'Categories' column</span>
                    <span class="s1">'title'</span>    <span class="o">=&gt;</span> <span class="s1">'Genre'</span><span class="p">,</span>              <span class="c1">// Custom title</span>
                <span class="p">),</span>
            <span class="p">),</span>
            <span class="k">array</span><span class="p">(</span>
                <span class="s1">'name'</span>          <span class="o">=&gt;</span> <span class="s1">'Publisher'</span><span class="p">,</span>
                <span class="s1">'id'</span>            <span class="o">=&gt;</span> <span class="s1">'publisher'</span><span class="p">,</span>
                <span class="s1">'type'</span>          <span class="o">=&gt;</span> <span class="s1">'text'</span><span class="p">,</span>
                <span class="s1">'admin_columns'</span> <span class="o">=&gt;</span> <span class="s1">'replace date'</span><span class="p">,</span> <span class="c1">// Replace 'Date' column</span>
            <span class="p">),</span>
            <span class="k">array</span><span class="p">(</span>
                <span class="s1">'name'</span>          <span class="o">=&gt;</span> <span class="s1">'Pages'</span><span class="p">,</span>
                <span class="s1">'id'</span>            <span class="o">=&gt;</span> <span class="s1">'pages'</span><span class="p">,</span>
                <span class="s1">'type'</span>          <span class="o">=&gt;</span> <span class="s1">'number'</span><span class="p">,</span>
                <span class="s1">'admin_columns'</span> <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span> <span class="c1">// Just show this column</span>
            <span class="p">),</span>
            <span class="k">array</span><span class="p">(</span>
                <span class="s1">'name'</span>          <span class="o">=&gt;</span> <span class="s1">'Price'</span><span class="p">,</span>
                <span class="s1">'id'</span>            <span class="o">=&gt;</span> <span class="s1">'price'</span><span class="p">,</span>
                <span class="s1">'type'</span>          <span class="o">=&gt;</span> <span class="s1">'number'</span><span class="p">,</span>
                <span class="s1">'admin_columns'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
                    <span class="s1">'before'</span> <span class="o">=&gt;</span> <span class="s1">'$'</span><span class="p">,</span>    <span class="c1">// Show custom HTML before and after column value</span>
                    <span class="s1">'after'</span>  <span class="o">=&gt;</span> <span class="s1">' USD'</span><span class="p">,</span>
                    <span class="s1">'sort'</span>   <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>   <span class="c1">// Sort this column</span>
                <span class="p">),</span>
            <span class="p">),</span>
        <span class="p">),</span>
    <span class="p">);</span>
    <span class="k">return</span> <span class="nv">$meta_boxes</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Here is the result:</p>

<p><img src="https://i.imgur.com/7joEGrL.png" alt="meta box admin columns" /></p>

<h2 id="usage">Usage</h2>

<p><strong>Make sure you know how to <a href="/creating-meta-boxes/">create meta boxes</a> and <a href="/field-settings/">fields</a> before continuing!</strong></p>

<p>To show the admin column for a field, simply add <code class="highlighter-rouge">admin_columns</code> setting for that field. The setting can be in one of 3 following formats:</p>

<h3 id="1-simply-display-the-admin-column">1. Simply display the admin column</h3>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s1">'admin_columns'</span> <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
</code></pre></div></div>

<p>This line tells the MB Admin Columns extension to display the meta value of the custom field in a custom column. This method uses the default configuration below:</p>

<ul>
  <li>The column title is field name</li>
  <li>The column is added to the end of the table</li>
</ul>

<h3 id="2-specify-the-column-position">2. Specify the column position</h3>

<p>You can set the column in a specific position by one of the following rules:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s1">'admin_columns'</span> <span class="o">=&gt;</span> <span class="s1">'before title'</span><span class="p">,</span>
<span class="s1">'admin_columns'</span> <span class="o">=&gt;</span> <span class="s1">'after title'</span><span class="p">,</span>
<span class="s1">'admin_columns'</span> <span class="o">=&gt;</span> <span class="s1">'replace title'</span><span class="p">,</span>
</code></pre></div></div>

<p>The format is <code class="highlighter-rouge">'admin_columns' =&gt; 'type column'</code> where:</p>

<table>
  <thead>
    <tr>
      <th>Param</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="highlighter-rouge">type</code></td>
      <td>Must be <code class="highlighter-rouge">before</code>, <code class="highlighter-rouge">after</code> or <code class="highlighter-rouge">replace</code>. Specify the position of the custom column.</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="highlighter-rouge">before</code>: Insert the column before an existing column</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="highlighter-rouge">after</code>: Insert the column after an existing column</td>
    </tr>
    <tr>
      <td> </td>
      <td><code class="highlighter-rouge">replace</code>: Replace an existing column by the new one</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">column</code></td>
      <td>The target existing column</td>
    </tr>
  </tbody>
</table>

<p>Using this configuration, you are able to insert the custom column in any position you want. Note that the column title is the field name by default.</p>

<h3 id="3-advanced-configuration">3. Advanced configuration</h3>

<p>To add more rules for the custom column, you can declare <code class="highlighter-rouge">admin_columns</code> parameter as an array which accepts the following keys:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s1">'admin_columns'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'position'</span>   <span class="o">=&gt;</span> <span class="s1">'after title'</span><span class="p">,</span>
    <span class="s1">'title'</span>      <span class="o">=&gt;</span> <span class="s1">'Price'</span><span class="p">,</span>
    <span class="s1">'before'</span>     <span class="o">=&gt;</span> <span class="s1">'$'</span><span class="p">,</span>
    <span class="s1">'after'</span>      <span class="o">=&gt;</span> <span class="s1">' USD'</span><span class="p">,</span>
    <span class="s1">'sort'</span>       <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
    <span class="s1">'searchable'</span> <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
    <span class="s1">'filterable'</span> <span class="o">=&gt;</span> <span class="kc">false</span><span class="p">,</span>
<span class="p">),</span>
</code></pre></div></div>

<p>The meaning of keys are described below:</p>

<table>
  <thead>
    <tr>
      <th>Key</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="highlighter-rouge">position</code></td>
      <td>Specify where to insert the new column. Accept rule in the format <code class="highlighter-rouge">'type column'</code>. It’s exactly the same as described in the #2 method above.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">title</code></td>
      <td>Column title. Optional. Default is the field name.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">before</code></td>
      <td>Custom HTML outputted before the column content. Optional.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">after</code></td>
      <td>Custom HTML outputted after the column content. Optional.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">sort</code></td>
      <td>Whether to sort the column by meta value? Optional. Default is <code class="highlighter-rouge">false</code>.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">searchable</code></td>
      <td>Allow to search posts by meta value. Optional. Default is <code class="highlighter-rouge">false</code>.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">filterable</code></td>
      <td>Allow to filter posts by custom taxonomy. Applied only if the field is <code class="highlighter-rouge">taxonomy</code> field. Default is <code class="highlighter-rouge">false</code>.</td>
    </tr>
  </tbody>
</table>

<p>Note that the <code class="highlighter-rouge">sort</code> parameter is used to sort displayed posts by altering the WordPress query. It works only with non-clonable and non-multiple fields.</p>

<h2 id="custom-admin-columns">Custom admin columns</h2>

<p>By default, the extension is made to work with fields created by the Meta Box plugin. However, there are situations where you want to make it work with non-custom fields by Meta Box. And that’s totally possible. Follow the steps below (note that it requires some coding):</p>

<h3 id="creating-custom-class">Creating custom class</h3>

<p>Create a new file <code class="highlighter-rouge">custom.php</code> (you can name it anything you want) in your plugin / theme folder where you need to extends the <code class="highlighter-rouge">\MBAC\Post</code> class (since version 1.5.0) or <code class="highlighter-rouge">MB_Admin_Columns_Post class</code> (for older versions of the plugin):</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Prefix_Custom_Admin_Columns</span> <span class="k">extends</span> <span class="nx">\MBAC\Post</span> <span class="p">{</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">columns</span><span class="p">(</span> <span class="nv">$columns</span> <span class="p">)</span> <span class="p">{</span>
        <span class="nv">$columns</span>  <span class="o">=</span> <span class="k">parent</span><span class="o">::</span><span class="na">columns</span><span class="p">(</span> <span class="nv">$columns</span> <span class="p">);</span>
        <span class="nv">$position</span> <span class="o">=</span> <span class="s1">''</span><span class="p">;</span>
        <span class="nv">$target</span>   <span class="o">=</span> <span class="s1">''</span><span class="p">;</span>
        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span> <span class="nv">$columns</span><span class="p">,</span> <span class="s1">'column_id'</span><span class="p">,</span> <span class="s1">'Column Title'</span><span class="p">,</span> <span class="nv">$position</span><span class="p">,</span> <span class="nv">$target</span> <span class="p">);</span>
        <span class="c1">// Add more if you want</span>
        <span class="k">return</span> <span class="nv">$columns</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">public</span> <span class="k">function</span> <span class="nf">show</span><span class="p">(</span> <span class="nv">$column</span><span class="p">,</span> <span class="nv">$post_id</span> <span class="p">)</span> <span class="p">{</span>
        <span class="k">switch</span> <span class="p">(</span> <span class="nv">$column</span> <span class="p">)</span> <span class="p">{</span>
            <span class="k">case</span> <span class="s1">'column_id'</span><span class="o">:</span>
                <span class="k">echo</span> <span class="s1">'Column content'</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="c1">// More columns</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Note that the custom column(s) is added via the call <code class="highlighter-rouge">$this-&gt;add( $columns, 'column_id', 'Column Title', $position, $target );</code>. You can repeat that code to add as many column as you want.</p>

<p>In the <code class="highlighter-rouge">show</code> function, you must add code to display content of these columns.</p>

<h3 id="instantiating">Instantiating</h3>

<p>In your plugin main file or <code class="highlighter-rouge">functions.php</code> of your theme, add the following code to create an instance of the class above:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">add_action</span><span class="p">(</span> <span class="s1">'admin_init'</span><span class="p">,</span> <span class="s1">'prefix_add_custom_columns'</span><span class="p">,</span> <span class="mi">20</span> <span class="p">);</span>
<span class="k">function</span> <span class="nf">prefix_add_custom_columns</span><span class="p">()</span> <span class="p">{</span>
    <span class="k">require_once</span> <span class="s1">'custom.php'</span><span class="p">;</span>
    <span class="k">new</span> <span class="nx">Prefix_Custom_Admin_Columns</span><span class="p">(</span> <span class="s1">'post'</span><span class="p">,</span> <span class="k">array</span><span class="p">()</span> <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>Note that the call <code class="highlighter-rouge">new Prefix_Custom_Admin_Columns( 'post', array() );</code> tells WordPress to add custom column(s) to <code class="highlighter-rouge">post</code>. You can change this to another post type if you want.</p>

<h3 id="example-1">Example</h3>

<p>Assume you want to display featured image before post title (for posts). Featured image is a WordPress field, not Meta Box’s, so you need to use a custom code to add it.</p>

<p>In this example, let’s use the <a href="https://wordpress.org/plugins/code-snippets/">Code Snippets</a> plugin to add code to the plugin as you might not want to change the <code class="highlighter-rouge">functions.php</code> file of the theme (or you don’t have access to it).</p>

<p>So, install that plugin and add the following code:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">add_action</span><span class="p">(</span> <span class="s1">'admin_init'</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span> <span class="p">{</span>
	<span class="kd">class</span> <span class="nc">My_Featured_Image_Columns</span> <span class="k">extends</span> <span class="nx">\MBAC\Post</span> <span class="p">{</span>
		<span class="k">public</span> <span class="k">function</span> <span class="nf">columns</span><span class="p">(</span> <span class="nv">$columns</span> <span class="p">)</span> <span class="p">{</span>
			<span class="nv">$columns</span>  <span class="o">=</span> <span class="k">parent</span><span class="o">::</span><span class="na">columns</span><span class="p">(</span> <span class="nv">$columns</span> <span class="p">);</span>
			<span class="nv">$position</span> <span class="o">=</span> <span class="s1">'before'</span><span class="p">;</span>
			<span class="nv">$target</span>   <span class="o">=</span> <span class="s1">'title'</span><span class="p">;</span>
			<span class="nv">$this</span><span class="o">-&gt;</span><span class="na">add</span><span class="p">(</span> <span class="nv">$columns</span><span class="p">,</span> <span class="s1">'featured_image'</span><span class="p">,</span> <span class="s1">'Featured Image'</span><span class="p">,</span> <span class="nv">$position</span><span class="p">,</span> <span class="nv">$target</span> <span class="p">);</span>
			<span class="c1">// Add more if you want</span>
			<span class="k">return</span> <span class="nv">$columns</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">public</span> <span class="k">function</span> <span class="nf">show</span><span class="p">(</span> <span class="nv">$column</span><span class="p">,</span> <span class="nv">$post_id</span> <span class="p">)</span> <span class="p">{</span>
			<span class="k">switch</span> <span class="p">(</span> <span class="nv">$column</span> <span class="p">)</span> <span class="p">{</span>
				<span class="k">case</span> <span class="s1">'featured_image'</span><span class="o">:</span>
					<span class="nx">the_post_thumbnail</span><span class="p">(</span> <span class="p">[</span><span class="mi">40</span><span class="p">,</span> <span class="mi">40</span><span class="p">]</span> <span class="p">);</span>
					<span class="k">break</span><span class="p">;</span>
				<span class="c1">// More columns</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>

	<span class="k">new</span> <span class="nx">My_Featured_Image_Columns</span><span class="p">(</span> <span class="s1">'post'</span><span class="p">,</span> <span class="k">array</span><span class="p">()</span> <span class="p">);</span>
<span class="p">}</span> <span class="p">);</span>
</code></pre></div></div>

<p>And here is the result:</p>

<p><img src="https://i.imgur.com/ml63gMo.png" alt="featured image" /></p>
:ET