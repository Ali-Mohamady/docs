I"-)<h2 id="overview">Overview</h2>

<p>The Meta Box plugin has built-in validation module for all fields. You can use validation to make a field required, check password length, check phone number format, etc.</p>

<p>The validation module is built with the popular <a href="https://jqueryvalidation.org/">jQuery validation plugin</a> which makes client side form validation easy, whilst still offering plenty of customization options. The plugin comes bundled with a useful set of validation methods and an API to write your own methods. All bundled methods come with default error messages in English and translations into 37 other languages.</p>

<h2 id="validation-rules">Validation rules</h2>

<p>To start using validation in Meta Box, you need to add a key <code class="highlighter-rouge">validation</code> to the meta box settings. This key has a parameter <code class="highlighter-rouge">rules</code> for validation rules and <code class="highlighter-rouge">messages</code> for error messages.</p>

<p>Let’s look at the example:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s1">'validation'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'rules'</span>  <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'field_id'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
            <span class="s1">'required'</span>  <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
            <span class="s1">'minlength'</span> <span class="o">=&gt;</span> <span class="mi">7</span><span class="p">,</span>
            <span class="c1">// More rules here</span>
        <span class="p">),</span>
        <span class="c1">// Rules for other fields</span>
    <span class="p">),</span>
<span class="p">)</span>
</code></pre></div></div>

<p>This example add validation for <code class="highlighter-rouge">field_id</code> field. There are 2 validation rules for this field: field is required and minimum length is 7.</p>

<p>So, basically the format for <code class="highlighter-rouge">rules</code> is:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s1">'rules'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'field_id_1'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
         <span class="c1">// rules for field_id_1</span>
    <span class="p">),</span>
    <span class="s1">'field_id_2'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
         <span class="c1">// rules for field_id_2</span>
    <span class="p">),</span>
    <span class="c1">// Rules for other fields</span>
<span class="p">),</span>
</code></pre></div></div>

<h2 id="built-in-validation-rules">Built-in validation rules</h2>

<p>These are list of basic validation rules that you can use for your fields:</p>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="highlighter-rouge">required</code></td>
      <td>Makes the element required.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">minlength</code></td>
      <td>Makes the element require a given minimum length.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">maxlength</code></td>
      <td>Makes the element require a given maxmimum length.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">rangelength</code></td>
      <td>Makes the element require a given value range. Array.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">min</code></td>
      <td>Makes the element require a given minimum.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">max</code></td>
      <td>Makes the element require a given maximum.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">range</code></td>
      <td>Makes the element require a given value range. Array.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">email</code></td>
      <td>Makes the element require a valid email</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">url</code></td>
      <td>Makes the element require a valid url</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">date</code></td>
      <td>Makes the element require a date.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">dateISO</code></td>
      <td>Makes the element require an ISO date.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">number</code></td>
      <td>Makes the element require a decimal number.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">digits</code></td>
      <td>Makes the element require digits only.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">creditcard</code></td>
      <td>Makes the element require a credit card number.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">equalTo</code></td>
      <td>Requires the element to be the same as another one. Value must be the ID of another field.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">remote</code></td>
      <td>Requests a resource to check the element for validity. Value can be URL of the resource to request for server side validation (string) or options to fully customize the request, see <a href="https://api.jquery.com/jQuery.ajax">jQuery.ajax</a>. The server side resource is called via jQuery.ajax and gets a key/value pair corresponding to the name of the validated element and its value as a GET parameter. The response is evaluated as JSON and must be <code class="highlighter-rouge">true</code> for valid elements, and can be any <code class="highlighter-rouge">false</code>, <code class="highlighter-rouge">undefined</code> or <code class="highlighter-rouge">null</code> for invalid elements, using the default message; or a string, eg. “That name is already taken, try peter123 instead” to display as the error message.</td>
    </tr>
  </tbody>
</table>

<p>For more details about validation rules, please read the <a href="https://jqueryvalidation.org/documentation/">jQuery validation documentation</a>.</p>

<h2 id="error-messages">Error messages</h2>

<p>To use custom error messages, you can add another parameter <code class="highlighter-rouge">messages</code> for <code class="highlighter-rouge">validation</code> key. This parameter has the same format as <code class="highlighter-rouge">rules</code>, but it just contains error messages for each rule.</p>

<p>Look at the example below:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s1">'validation'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'rules'</span>  <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'field_id'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
            <span class="s1">'required'</span>  <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
            <span class="s1">'minlength'</span> <span class="o">=&gt;</span> <span class="mi">7</span><span class="p">,</span>
        <span class="p">),</span>
    <span class="p">),</span>
    <span class="c1">// Optional override of default error messages</span>
    <span class="s1">'messages'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'field_id'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
            <span class="s1">'required'</span>  <span class="o">=&gt;</span> <span class="s1">'Password is required'</span><span class="p">,</span>
            <span class="s1">'minlength'</span> <span class="o">=&gt;</span> <span class="s1">'Password must be at least 7 characters'</span><span class="p">,</span>
        <span class="p">),</span>
    <span class="p">)</span>
<span class="p">)</span>
</code></pre></div></div>

<h2 id="notes">Notes</h2>

<h3 id="gutenberg">Gutenberg</h3>

<p>The validation hasn’t worked for the block editor (Gutenberg) yet. This is a technical issue that we have with Gutenberg and is a known issue. We’re trying to fix that.</p>

<h3 id="input-name">Input name</h3>

<p>The jQuery validation library actually uses <strong>input name</strong>, not input ID. In most cases, field ID is the same as field name. But for some cases such as field is a checkbox list or is a taxonomy with <code class="highlighter-rouge">field_type</code> is <code class="highlighter-rouge">checkbox_list</code>, e.g. where field has multiple inputs, then all those inputs don’t have IDs.</p>

<p>In this case, <strong>you need to use input name for the rules</strong>. For example, if you use a taxonomy field with <code class="highlighter-rouge">field_type</code> is <code class="highlighter-rouge">checkbox_list</code>, you should set validation rules as follows:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s1">'validation'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'rules'</span>  <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'my_taxonomy[]'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
            <span class="s1">'required'</span>  <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
        <span class="p">),</span>
    <span class="p">),</span>
    <span class="s1">'messages'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'my_taxonomy[]'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
            <span class="s1">'required'</span>  <span class="o">=&gt;</span> <span class="s1">'You must select a tag to proceed'</span><span class="p">,</span>
        <span class="p">),</span>
    <span class="p">),</span>
<span class="p">),</span>
</code></pre></div></div>
:ET