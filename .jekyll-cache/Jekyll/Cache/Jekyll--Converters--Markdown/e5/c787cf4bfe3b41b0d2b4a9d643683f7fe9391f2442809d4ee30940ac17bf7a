I"≥?<h2 id="overview">Overview</h2>

<p>The user field allows you to select one or multiple users. This field has several settings that can be displayed as a: simple select dropdown, checkbox list, or beautiful select dropdown with select2 library.</p>

<h2 id="screenshots">Screenshots</h2>

<p>Beautiful select with select2 library (default):</p>

<p><img src="https://i.imgur.com/2cEuGhf.png" alt="user select" /></p>

<p>Checkbox list:</p>

<p><img src="https://i.imgur.com/iG6Gwb4.png" alt="user checkbox list" /></p>

<p>Radio list:</p>

<p><img src="https://i.imgur.com/bfLWmxG.png" alt="radio list" /></p>

<p>Radio list inline:</p>

<p><img src="https://i.imgur.com/yFC8YF2.png" alt="radio list inline" /></p>

<h2 id="settings">Settings</h2>

<p>Besides the <a href="/field-settings/">common settings</a>, this field has the following specific settings:</p>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="highlighter-rouge">query_args</code></td>
      <td>Query arguments for getting users. Uses same arguments as <a href="https://codex.wordpress.org/Function_Reference/get_users">get_users()</a>. Optional.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">placeholder</code></td>
      <td>The placeholder for the select box. Default is ‚ÄúSelect an user‚Äù. Applied only when the <code class="highlighter-rouge">field_type</code> is a select field.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">field_type</code></td>
      <td>How the users are displayed? See below.</td>
    </tr>
  </tbody>
</table>

<p>This field inherits the look and field (and settings) from other fields, depending on the <code class="highlighter-rouge">field_type</code>, which accepts the following value:</p>

<table>
  <thead>
    <tr>
      <th>Field type</th>
      <th>Description</th>
      <th>Settings inherited from</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="highlighter-rouge">select</code></td>
      <td>Simple select dropdown.</td>
      <td><a href="/fields/select/">select</a></td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">select_advanced</code></td>
      <td>Beautiful select dropdown using the select2 library. This is the default value.</td>
      <td><a href="/fields/select_advanced/">select_advanced</a></td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">checkbox_list</code></td>
      <td>Flatten list of checkboxes which allows to select multiple items.</td>
      <td><a href="/fields/checkbox-list/">checkbox_list</a></td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">radio_list</code></td>
      <td>Flatten list of radio boxes which allows to select only 1 item.</td>
      <td><a href="/fields/radio/">radio</a></td>
    </tr>
  </tbody>
</table>

<p>Note that for <code class="highlighter-rouge">checkbox_list</code>, the <code class="highlighter-rouge">multiple</code> setting is always set to <code class="highlighter-rouge">true</code>.</p>

<h2 id="sample-code">Sample code</h2>

<p>This code shows users in select2 dropdown:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">array</span><span class="p">(</span>
    <span class="s1">'name'</span>        <span class="o">=&gt;</span> <span class="s1">'User'</span><span class="p">,</span>
    <span class="s1">'id'</span>          <span class="o">=&gt;</span> <span class="s1">'user'</span><span class="p">,</span>
    <span class="s1">'type'</span>        <span class="o">=&gt;</span> <span class="s1">'user'</span><span class="p">,</span>

    <span class="c1">// 'clone'    =&gt; true,</span>

    <span class="c1">// Field type.</span>
    <span class="s1">'field_type'</span>  <span class="o">=&gt;</span> <span class="s1">'select_advanced'</span><span class="p">,</span>

    <span class="c1">// Placeholder.</span>
    <span class="s1">'placeholder'</span> <span class="o">=&gt;</span> <span class="s1">'Select an author'</span><span class="p">,</span>

    <span class="c1">// Query arguments (optional). No settings means get all published users.</span>
    <span class="c1">// @see https://codex.wordpress.org/Function_Reference/get_users</span>
    <span class="s1">'query_args'</span>  <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(),</span>
<span class="p">),</span>
</code></pre></div></div>

<p>The code below shows users in a radio list format:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">array</span><span class="p">(</span>
    <span class="s1">'name'</span>        <span class="o">=&gt;</span> <span class="s1">'User'</span><span class="p">,</span>
    <span class="s1">'id'</span>          <span class="o">=&gt;</span> <span class="s1">'user'</span><span class="p">,</span>
    <span class="s1">'type'</span>        <span class="o">=&gt;</span> <span class="s1">'user'</span><span class="p">,</span>

    <span class="c1">// 'clone'    =&gt; true,</span>

    <span class="c1">// Field type.</span>
    <span class="s1">'field_type'</span>  <span class="o">=&gt;</span> <span class="s1">'radio_list'</span><span class="p">,</span>

    <span class="c1">// Inline radios? Inheritted from radio field.</span>
    <span class="s1">'inline'</span>      <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>

    <span class="c1">// Query arguments (optional). No settings means get all published users.</span>
    <span class="c1">// @see https://codex.wordpress.org/Function_Reference/get_users</span>
    <span class="s1">'query_args'</span>  <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(),</span>
<span class="p">),</span>
</code></pre></div></div>

<h2 id="ajax-load">Ajax Load</h2>

<p>Since version 5.2, Meta Box uses Ajax to increase the performance for the field query. Instead of fetching all users at once, the plugin now fetches only some users when the page is loaded, and then fetches more users when users scroll down to the list.</p>

<p>See this video for demonstration (made for posts, but works similar for taxonomies):</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0;"><iframe src="https://www.loom.com/embed/0437f466379e4a328fb4fcae11cd3bf5" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen="" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"></iframe></div>

<p>This feature is available only for fields that set <code class="highlighter-rouge">field_type</code> to <code class="highlighter-rouge">select_advanced</code>. There are some extra parameters for you to disable or customize it.</p>

<h3 id="enabledisable-ajax-requests">Enable/Disable Ajax Requests</h3>

<p>To enable the Ajax requests, simply add <code class="highlighter-rouge">'ajax' =&gt; true</code> (which is added by default) to the field:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">array</span><span class="p">(</span>
    <span class="s1">'id'</span> <span class="o">=&gt;</span> <span class="s1">'project_author'</span><span class="p">,</span>
    <span class="s1">'title'</span> <span class="o">=&gt;</span> <span class="s1">'Project Author'</span><span class="p">,</span>
    <span class="s1">'type'</span> <span class="o">=&gt;</span> <span class="s1">'user'</span><span class="p">,</span>
    <span class="s1">'ajax'</span> <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span> <span class="c1">// THIS</span>
<span class="p">),</span>
</code></pre></div></div>

<p>Setting this parameter to <code class="highlighter-rouge">false</code> will disable Ajax requests, making it work exactly the same as in previous versions.</p>

<h3 id="limit-the-number-of-users-for-pagination">Limit The Number of Users for Pagination</h3>

<p>Similar to the previous version, the number of users for pagination is set via the <code class="highlighter-rouge">number</code> in the <code class="highlighter-rouge">query_args</code> parameter:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">array</span><span class="p">(</span>
    <span class="s1">'id'</span> <span class="o">=&gt;</span> <span class="s1">'project_author'</span><span class="p">,</span>
    <span class="s1">'title'</span> <span class="o">=&gt;</span> <span class="s1">'Project Author'</span><span class="p">,</span>
    <span class="s1">'type'</span> <span class="o">=&gt;</span> <span class="s1">'user'</span><span class="p">,</span>
    <span class="s1">'ajax'</span> <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
    <span class="s1">'query_args'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'number'</span> <span class="o">=&gt;</span> <span class="mi">10</span><span class="p">,</span> <span class="c1">// THIS</span>
    <span class="p">),</span>
<span class="p">),</span>
</code></pre></div></div>

<p>Unlike in previous versions, this number is used only for Ajax requests to fetch the next bunch of users. The new fetched users will be appended to the list of options in the dropdown, to make the infinite scroll effect.</p>

<p>It also <em>doesn‚Äôt affect the initial load</em> of the field. When the field is loaded, Meta Box <em>only queries for saved users</em> (which is usually not many). So the initial query is very minimal and doesn‚Äôt cause any performance problem.</p>

<h3 id="searching-parameters">Searching Parameters</h3>

<p>You probably don‚Äôt want to perform an Ajax request when open the dropdown at first. You might want to <em>make Ajax requests only when users type something</em> and search for that. To do that, you need to set the <code class="highlighter-rouge">minimumInputLengthfor</code> the input, as below:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">array</span><span class="p">(</span>
    <span class="s1">'id'</span> <span class="o">=&gt;</span> <span class="s1">'project_author'</span><span class="p">,</span>
    <span class="s1">'title'</span> <span class="o">=&gt;</span> <span class="s1">'Project Author'</span><span class="p">,</span>
    <span class="s1">'type'</span> <span class="o">=&gt;</span> <span class="s1">'user'</span><span class="p">,</span>
    <span class="s1">'ajax'</span> <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
    <span class="s1">'query_args'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'number'</span> <span class="o">=&gt;</span> <span class="mi">10</span><span class="p">,</span>
    <span class="p">),</span>
    <span class="s1">'js_options'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'minimumInputLength'</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span> <span class="c1">// THIS</span>
    <span class="p">),</span>
<span class="p">),</span>
</code></pre></div></div>

<p>This parameter sets the minimum number of characters required to start a search. It may be good if you don‚Äôt want users to make too many Ajax requests that could harm your server.</p>

<h2 id="data">Data</h2>

<p>This field saves user ID(s) in the database.</p>

<p>If field is not <code class="highlighter-rouge">multiple</code>, then a single user ID is saved in the database. Otherwise, the field saves multiple user IDs in the database, where each user ID is store in a single row in the database with the same meta key (similar to what <code class="highlighter-rouge">add_post_meta</code> does with last parameter <code class="highlighter-rouge">false</code>).</p>

<p>If the field is cloneable, then the value is stored as a serialized array in a single row in the database.</p>

<h2 id="template-usage">Template usage</h2>

<p>If field is not <code class="highlighter-rouge">multiple</code>, getting value is simple:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$user_id</span> <span class="o">=</span> <span class="nx">rwmb_meta</span><span class="p">(</span> <span class="nv">$field_id</span> <span class="p">);</span>
<span class="nv">$user</span> <span class="o">=</span> <span class="nx">get_userdata</span><span class="p">(</span> <span class="nv">$user_id</span> <span class="p">);</span>
<span class="k">echo</span> <span class="s1">'Username: '</span><span class="p">,</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">user_login</span><span class="p">;</span>
<span class="k">echo</span> <span class="s1">'User display name: '</span><span class="p">,</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">display_name</span><span class="p">;</span>
</code></pre></div></div>

<p>If field is <code class="highlighter-rouge">multiple</code>, you can loop through the returned values like this:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$user_ids</span> <span class="o">=</span> <span class="nx">rwmb_meta</span><span class="p">(</span> <span class="nv">$field_id</span> <span class="p">);</span>
<span class="k">foreach</span> <span class="p">(</span> <span class="nv">$user_ids</span> <span class="k">as</span> <span class="nv">$user_id</span> <span class="p">)</span> <span class="p">{</span>
    <span class="nv">$user</span> <span class="o">=</span> <span class="nx">get_userdata</span><span class="p">(</span> <span class="nv">$user_id</span> <span class="p">);</span>
    <span class="k">echo</span> <span class="s1">'&lt;p&gt;'</span><span class="p">,</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">display_name</span><span class="p">,</span> <span class="s1">'&lt;/p&gt;'</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>If you just want to output selected users in an unordered list, use this code:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">rwmb_the_value</span><span class="p">(</span> <span class="nv">$field_id</span> <span class="p">);</span>
</code></pre></div></div>

<p>Read more about <a href="/rwmb-meta/">rwmb_meta()</a> and <a href="/rwmb-the-value/">rwmb_the_value()</a>.</p>

<h2 id="filters">Filters</h2>

<p><code class="highlighter-rouge">rwmb_user_choice_label</code> and <code class="highlighter-rouge">rwmb_{$field_id}_choice_label</code></p>

<p>These filters allow developers to change the label of <code class="highlighter-rouge">user</code> fields. The 1st label applies to all <code class="highlighter-rouge">user</code> fields, and the later for a specific field.</p>

<p>Example: If you are using a field called <code class="highlighter-rouge">some_user</code> and you want to change the label in the select box to user <code class="highlighter-rouge">first_name</code> instead of the default <code class="highlighter-rouge">display_name</code>:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">function</span> <span class="nf">some_user_filter</span><span class="p">(</span> <span class="nv">$label</span><span class="p">,</span> <span class="nv">$field</span><span class="p">,</span> <span class="nv">$user</span> <span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nv">$user</span><span class="o">-&gt;</span><span class="na">first_name</span> <span class="p">;</span>
<span class="p">}</span>
<span class="nx">add_filter</span><span class="p">(</span> <span class="s1">'rwmb_some_user_choice_label'</span><span class="p">,</span> <span class="s1">'some_user_filter'</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span>
</code></pre></div></div>
:ET