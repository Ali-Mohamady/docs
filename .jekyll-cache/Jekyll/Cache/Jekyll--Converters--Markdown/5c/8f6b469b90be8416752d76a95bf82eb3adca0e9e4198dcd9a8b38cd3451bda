I"ÜE<h2 id="overview">Overview</h2>

<p>Meta Box Builder is the most popular extension for Meta Box users and is the mandatory tool for almost everyone.</p>

<p>This extension creates an UI for you to add and manage your custom fields. So you don‚Äôt need to <a href="https://docs.metabox.io/creating-meta-boxes/">touch code again</a>. It‚Äôs helpful for both beginners (who have little knowlege about PHP coding) or experience developers (who want to save time).</p>

<p>If you already used our free <a href="https://metabox.io/online-generator/">Online Generator</a>, then this extension works very similarly. But it has a better support (very much) for all field types and other extensions and it works right in the WordPress admin area.</p>

<p>Please note that, while Meta Box Builder supports most settings for custom fields and extensions, there are some advanced settings that need to be done in PHP code (such as <a href="https://docs.metabox.io/extensions/mb-settings-page/">creating settings page</a> or <a href="https://docs.metabox.io/extensions/mb-relationships/">relationships</a> if you use these extensions). But in 95% cases, you‚Äôre fine with the extension.</p>

<p>Take a look at the screenshot:</p>

<p><img src="https://i2.wp.com/metabox.io/wp-content/uploads/2015/01/meta-box-builder-field-edit.png" alt="meta box builder ui" /></p>

<p>For more information, please see the <a href="https://metabox.io/plugins/meta-box-builder/">extension page</a>.</p>

<p>This guide cover basic tasks a user may carry out when using our builder.</p>

<h2 id="installation">Installation</h2>
<p>Before installing the extension, you need to install Meta Box plugin first.</p>

<ol>
  <li>Go to <em>Plugins ‚Üí Add New</em> and search for <strong>Meta Box</strong></li>
  <li>Click <strong>Install Now</strong> button to install the plugin</li>
  <li>After installing, click <strong>Activate Plugin</strong> to activate the plugin</li>
</ol>

<p>The extension is just a WordPress plugin, you can install it like a normal WordPress plugin.</p>

<ol>
  <li>Go to <em>Plugins</em>, click <strong>Add new</strong>, then click <strong>Upload plugin</strong>.</li>
  <li>Choose the <code class="highlighter-rouge">.zip</code> file you downloaded and click <strong>Install now</strong></li>
  <li>After finishing upload, click <strong>Activate</strong> to finish.</li>
</ol>

<p>After installing, the plugin creates a sub-menu <strong>Custom Fields</strong> under the top-level menu <strong>Meta Box</strong> in the WordPress admin.</p>

<p><img src="https://i.imgur.com/EHd1v23.png" alt="meta box builder menu" /></p>

<p>Clicking on that menu will bring you to the screen where you can create meta boxes and custom fields.</p>

<p>Please note that the screen says <strong>Field Groups</strong> instead of <strong>Meta Boxes</strong>. We think the term ‚Äúmeta box‚Äù might be confusing, since it‚Äôs the name of the <a href="https://metabox.io">Meta Box plugin</a>. Besides, the meta box builder is for creating custom fields, using field group with a simple meaning of ‚Äúset of custom fields‚Äù makes sense. This term also works in case you want to build <a href="https://metabox.io/plugins/mb-frontend-submission/">front-end forms</a>, <a href="https://metabox.io/plugins/mb-settings-page/">settings pages</a> or <a href="https://metabox.io/plugins/mb-user-meta/">user fields</a>.</p>

<h2 id="creating-a-field-group">Creating a field group</h2>

<p>To create a field group, go to <em>Meta Box ‚Üí Custom Fields</em>. Then click the <strong>Add New</strong> button.</p>

<p>On the add new field group screen, enter a name for your new field group in the <strong>Title</strong> box. The field group ID is then automatically generated. You can change the ID if you want, it‚Äôs optional.</p>

<p>Then select the fields you want to add to the field group on the left. When click on a field, it will be automatically added to the list of fields in the field group. We‚Äôll see the settings of each fields in a section below.</p>

<p><img src="https://i.imgur.com/K7BzNfZ.png" alt="creating a meta box (field group)" /></p>

<div class="alert">
	
		<svg class="icon icon-info" aria-hidden="true" role="img"><use href="#icon-info" xlink:href="#icon-info"></use></svg>
	
	<p>To find a field type quickly, type its name in the input box above the field list. The plugin will filter the fields and show only matched fields.</p>

</div>

<p>When it‚Äôs done, click button <strong>Publish</strong> to save the field group. You also can click on <strong>Save as Draft</strong> link if you don‚Äôt want to publish it, e.g. making it not available in the edit post screen.</p>

<h2 id="field-group-settings">Field group settings</h2>

<p>The field group settings are put in the tab <strong>Settings</strong>:</p>

<p><img src="https://i.imgur.com/CHosaVq.png" alt="field group settings" /></p>

<p>The list of field group settings are listed and explained <a href="https://docs.metabox.io/creating-meta-boxes/">here</a>. The Meta Box Builder plugin simply converts them into UI to make it easy for you to select/change them.</p>

<div class="alert">
	
		<svg class="icon icon-info" aria-hidden="true" role="img"><use href="#icon-info" xlink:href="#icon-info"></use></svg>
	
	<p>Note that, field groups also accept custom attributes, just like fields. It uses the same dot notation or JSON notation to define custom attributes. For more information, please see <strong>Custom Attributes</strong> section below.</p>

</div>

<h2 id="customizing-field-settings">Customizing field settings</h2>

<p>When adding fields to a field group, each field has its own settings. The list of settings with detailed explaination is <a href="https://docs.metabox.io/field-settings/">here</a>. Meta Box Builder simply creates UI for them.</p>

<p>To view and edit field settings, click the arrow on the title panel:</p>

<p><img src="https://i.imgur.com/X6BSk7g.png" alt="Edit field settings" /></p>

<p>Each field settings are self-explained. We also add some tooltips next to the setting title to give you more information if needed.</p>

<p>All field settings are divided into 3 tabs: General, Appearance and Advanced. The General and Appearance tabs are common for all fields. The Advanced tab is for custom attributes (advanced settings - we‚Äôll talk about it in a section below) and for <a href="https://metabox.io/plugins/">Meta Box extensions</a>.</p>

<div class="alert">
	
		<svg class="icon icon-info" aria-hidden="true" role="img"><use href="#icon-info" xlink:href="#icon-info"></use></svg>
	
	<p>Besides common settings, each field has its own settings. Depend on the field type, the UI might be different to show specific settings for it.</p>

</div>

<h2 id="custom-attributes">Custom attributes</h2>

<p>You can also add an custom attributes which does not exist on the field UI window by click on Advanced tab, then click <strong>+ Attribute</strong> button:</p>

<p><img src="https://i.imgur.com/spmhYCn.png" alt="custom attribute" /></p>

<p>For example, if you want to create a text field like:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="s1">'text'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
    <span class="s1">'foo'</span> <span class="o">=&gt;</span> <span class="s1">'bar'</span><span class="p">,</span>
    <span class="s1">'baz'</span> <span class="o">=&gt;</span> <span class="kc">false</span>
<span class="p">)</span>
</code></pre></div></div>

<p>Just enter <code class="highlighter-rouge">foo</code> to the key, <code class="highlighter-rouge">bar</code> to the value, <code class="highlighter-rouge">baz</code> to the key and <code class="highlighter-rouge">false</code> to the value.</p>

<p>Remember, Meta Box Builder will treat <code class="highlighter-rouge">true</code>, <code class="highlighter-rouge">false</code>, <code class="highlighter-rouge">0</code>, <code class="highlighter-rouge">1</code> values as <code class="highlighter-rouge">bool</code> type.</p>

<p>If the field requires complex settings, like this:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">array</span><span class="p">(</span>
    <span class="s1">'type'</span> <span class="o">=&gt;</span> <span class="s1">'post'</span><span class="p">,</span>
    <span class="s1">'id'</span> <span class="o">=&gt;</span> <span class="s1">'field_id'</span><span class="p">,</span>
    <span class="s1">'query_args'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'tax_query'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
            <span class="k">array</span><span class="p">(</span>
                <span class="s1">'taxonomy'</span> <span class="o">=&gt;</span> <span class="s1">'category'</span><span class="p">,</span>
                <span class="s1">'field'</span>    <span class="o">=&gt;</span> <span class="s1">'slug'</span><span class="p">,</span>
                <span class="s1">'terms'</span>    <span class="o">=&gt;</span> <span class="s1">'technology'</span><span class="p">,</span>
            <span class="p">),</span>
        <span class="p">),</span>
    <span class="p">),</span>
<span class="p">)</span>
</code></pre></div></div>

<p>Then you can use the dot notation or JSON for custom attributes:</p>

<h3 id="dot-notation">Dot notation</h3>

<p>The dot notation is available since version 1.2. For the <code class="highlighter-rouge">tax_query</code> above, you can define with dot notation like so:</p>

<p><img src="https://i.imgur.com/YbjBP7A.png" alt="dot notation" /></p>

<p>Please note that <code class="highlighter-rouge">tax_query.0.taxonomy</code>, <code class="highlighter-rouge">tax_query.0.field</code>, and <code class="highlighter-rouge">tax_query.0.terms</code> because the taxonomy named <code class="highlighter-rouge">category</code>, the field named <code class="highlighter-rouge">slug</code> and the term named technology are belong to the first (and only one) array of tax_query, not directly belongs to <code class="highlighter-rouge">tax_query</code>.</p>

<h3 id="json-notation">JSON notation</h3>

<p>To create a nested array in Meta Box Builder, you can use JSON notation, encode the whole array of <code class="highlighter-rouge">tax_query</code> and paste to it value. Like so:</p>

<p><img src="https://i.imgur.com/kJRrnd7.png" alt="json value" /></p>

<h2 id="manipulating-fields">Manipulating fields</h2>

<h3 id="deleting-or-duplicating-a-field">Deleting or duplicating a field</h3>

<p>To delete or duplicate a field, simply clicking the icons in the toolbar:</p>

<p><img src="https://i.imgur.com/98mSFzx.png" alt="delete or duplicate a field" /></p>

<h3 id="reordering-fields">Reordering fields</h3>

<p>Just drag your fields to the position that you want.</p>

<p><a href="https://i.imgur.com/ZOZD5aY.gif"><img src="https://i.imgur.com/ZOZD5aY.gif" alt="reordering fields" /></a></p>

<h2 id="getting-php-code">Getting PHP code</h2>

<p>For each field group, Meta Box Buider can create a PHP code that you can copy and paste into your theme‚Äôs <code class="highlighter-rouge">functions.php</code> file (or your plugin file) and then <em>deactivate the Meta Box Builder extension</em>.</p>

<p>This is helpful if you want to:</p>

<ul>
  <li>Share field groups to other websites which doesn‚Äôt have Meta Box Builder installed.</li>
  <li>Improve the performance since field groups are loaded directly from your file.</li>
</ul>

<p>To get the code, click on the tab <strong>Code</strong>, then click the <strong>Copy</strong> button to copy the code. Then paste it into your theme‚Äôs <code class="highlighter-rouge">functions.php</code> file.</p>

<p><img src="https://i.imgur.com/g6EnLns.png" alt="export code" /></p>

<p>When you copy PHP code and paste it into your theme‚Äôs <code class="highlighter-rouge">functions.php</code> file, you can <strong>safely deactivate Meta Box Builder</strong> (do <em>not</em> deactivate Meta Box, it‚Äôs still required).</p>

<p>For detailed instruction, please see <a href="https://metabox.io/copy-custom-fields-with-meta-box-builder/">this tutorial</a>.</p>

<p>Please note that once you take the PHP code and remove the settings from the Meta Box Builder, there‚Äôs no way to edit the field group in the Meta Box Builder directly from the exported code.</p>

<p>In order to do re-edit the field group, we suggest after taking the PHP code, export the field group settings from Meta Box Builder (see the section below). Then whenever you want to edit the field group, just import it back and edit.</p>

<h2 id="export--import">Export / Import</h2>

<p>To export one or more field groups, go to the main screen <em>Meta Box ‚Üí Custom Fields</em>. Then click the checkboxes next to the field groups‚Äô titles you want to export. Then choose <strong>Export</strong> from the Bulk Actions dropdown. Then click <strong>Apply</strong>.</p>

<p><img src="https://i.imgur.com/r1moj0S.png" alt="export field groups" /></p>

<p>Or you can export individual field group by clicking on <strong>Export</strong> link when hover the mouse over the field group title:</p>

<p><img src="https://i.imgur.com/Nx45cpH.png" alt="export a single field group" /></p>

<p>To import field groups, select the <em>Import</em> button at the top of the page. Then choose the downloaded file in the previous step, then press <strong>Upload file and import</strong>. That‚Äôs all!</p>

<p><img src="https://i.imgur.com/bpf4acg.png" alt="import field groups" /></p>

<p>For detailed instruction, please see <a href="https://metabox.io/export-import-custom-fields-meta-box-builder/">this tutorial</a>.</p>

<p>Video tutorial:</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/BGVY-5W6d7g?rel=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>

<h2 id="create-gutenberg-blocks">Create Gutenberg blocks</h2>

<p>Since v3.1.0, Meta Box Builder allows you to create Gutenberg blocks visually, without writing code. See this video tutorial on how to do that:</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/v3ke1DBlWuk" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<p>Note that the plugin supports Twig template engine to write block template code. See <a href="https://twig.symfony.com/doc/1.x/templates.html">Twig documentation</a> for how to use variables, conditions and functions.</p>

<p>For more convenient, the plugin supports the following variables:</p>

<ul>
  <li><code class="highlighter-rouge">{{ align }}</code>: block alignment (if the block supports it).</li>
  <li><code class="highlighter-rouge">{{ anchor }}</code>: block anchor (if the block supports it).</li>
  <li><code class="highlighter-rouge">{{ className }}</code>: custom CSS class name (if the block supports it).</li>
  <li><code class="highlighter-rouge">{{ is_preview }}</code>: whether or not in preview mode.</li>
  <li><code class="highlighter-rouge">{{ post_id }}</code>: the current post ID.</li>
</ul>

<p>To access the field value, you can use <code class="highlighter-rouge">{{ field_id }}</code>, where <code class="highlighter-rouge">field_id</code> is the field ID. If the field returns an array (such as <code class="highlighter-rouge">single_image</code> field), you can access to field‚Äôs attribute with <code class="highlighter-rouge">{{ my_image.full_url }}</code>.</p>

<p>Besides, the plugin also allows you to use any PHP/WordPress function via <code class="highlighter-rouge">mb.function()</code> where <code class="highlighter-rouge">function</code> is the function name. For example, the code below get the post object and output the post title:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="p">{</span><span class="o">%</span> <span class="nx">set</span> <span class="nx">post</span> <span class="o">=</span> <span class="nx">mb</span><span class="o">.</span><span class="nx">get_post</span><span class="p">(</span> <span class="nx">post_id</span> <span class="p">)</span> <span class="o">%</span><span class="p">}</span>
<span class="p">{{</span> <span class="nx">post</span><span class="o">.</span><span class="nx">post_title</span> <span class="p">}}</span>

</code></pre></div></div>

<p>Or this code will output the site title:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="p">{</span><span class="o">%</span> <span class="nx">set</span> <span class="nx">site_title</span> <span class="o">=</span> <span class="nx">mb</span><span class="o">.</span><span class="nx">get_bloginfo</span><span class="p">(</span> <span class="s1">'name'</span> <span class="p">)</span> <span class="o">%</span><span class="p">}</span>
<span class="p">{{</span> <span class="nx">site_title</span> <span class="p">}}</span>

</code></pre></div></div>

<h2 id="further-reading">Further Reading</h2>

<ul>
  <li><a href="https://metabox.io/add-configure-custom-fields-meta-box-builder/">How to Add and Configure Custom Fields Using Meta Box Builder</a></li>
  <li><a href="https://metabox.io/export-import-custom-fields-meta-box-builder/">How to Export and Import Custom Fields with Meta Box Builder</a></li>
  <li><a href="https://metabox.io/copy-custom-fields-with-meta-box-builder/">How to Easily Copy Custom Fields From One Site to Others with Meta Box Builder</a></li>
  <li><a href="/create-columns-in-meta-box-builder/">Create Columns in Meta Box Builder</a></li>
</ul>
:ET