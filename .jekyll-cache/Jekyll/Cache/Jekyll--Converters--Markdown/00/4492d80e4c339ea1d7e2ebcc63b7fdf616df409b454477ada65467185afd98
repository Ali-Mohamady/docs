I"2"<p>This documentation will show you how to install <a href="https://metabox.io/plugins">Meta Box extensions</a> via Composer.</p>

<p>If you haven’t known about <a href="https://getcomposer.org">Composer</a>, then it is a package dependency manager for PHP. The core Meta Box plugin <a href="/composer/">already supports Composer</a>. And so do its extensions.</p>

<p>You can skip the text and jump to the video tutorial below.</p>

<h2 id="setup">Setup</h2>

<p>To use Composer to install Meta Box extensions, please add <code class="highlighter-rouge">repositories</code> rule to your <code class="highlighter-rouge">composer.json</code>:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">"repositories"</span><span class="p">:</span><span class="w"> </span><span class="p">[{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"composer"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://packages.metabox.io/YOUR_API_KEY"</span><span class="w">
</span><span class="p">}]</span><span class="err">,</span><span class="w">
</span></code></pre></div></div>

<p>Please note that <strong>you need an active API Key</strong> to use Meta Box extensions with Composer. Go to <a href="https://metabox.io/my-account/">My Account</a> page to get your API Key.</p>

<p>If your license has expired, please renew it. If you don’t have any, then you need to purchase <a href="https://metabox.io/plugins/">an extension</a> or <a href="https://metabox.io/pricing/">a bundle of extensions</a>.</p>

<p>The system automatically checks if your license is still active. If yes, then you’ll granted access via Composer to Meta Box’s packages. It also ensures you have access to only extensions you purchased.</p>

<h2 id="usage">Usage</h2>

<p>To include extensions via Composer, simply add them as dependencies like this:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">"require"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="nl">"meta-box/meta-box-group"</span><span class="p">:</span><span class="w"> </span><span class="s2">"dev-master"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"meta-box/meta-box-columns"</span><span class="p">:</span><span class="w"> </span><span class="s2">"dev-master"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"meta-box/mb-settings-page"</span><span class="p">:</span><span class="w"> </span><span class="s2">"dev-master"</span><span class="p">,</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>So, your final <code class="highlighter-rouge">composer.json</code> will be:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"repositories"</span><span class="p">:</span><span class="w"> </span><span class="p">[{</span><span class="w">
    </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"composer"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"https://packages.metabox.io/YOUR_API_KEY"</span><span class="w">
  </span><span class="p">}],</span><span class="w">
  </span><span class="nl">"require"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"meta-box/meta-box-group"</span><span class="p">:</span><span class="w"> </span><span class="s2">"dev-master"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"meta-box/meta-box-columns"</span><span class="p">:</span><span class="w"> </span><span class="s2">"dev-master"</span><span class="p">,</span><span class="w">
    </span><span class="nl">"meta-box/mb-settings-page"</span><span class="p">:</span><span class="w"> </span><span class="s2">"dev-master"</span><span class="p">,</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p><strong>Important note:</strong> the version of extensions specified in <code class="highlighter-rouge">composer.json</code> <em>must</em> be <code class="highlighter-rouge">dev-master</code>. We don’t support version constrains for Meta Box extensions yet. You always use the latest version.</p>

<p>To install the extensions, simply run:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>composer <span class="nb">install</span>
</code></pre></div></div>

<p>Alternatively, you can install the extensions via command line without editing <code class="highlighter-rouge">composer.json</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>composer require meta-box/meta-box-group:dev-master
</code></pre></div></div>

<p>The extensions then will be installed in the WordPress’s <code class="highlighter-rouge">wp-content/plugins</code> directory, instead of the traditional <code class="highlighter-rouge">vendor</code> folder thanks to <a href="https://github.com/composer/installers">composer/installers</a>. <code class="highlighter-rouge">composer/installers</code> is a powerful package that allows us to change the install path of packages to the specific folder we want. And by default, all Meta Box extensions have type <code class="highlighter-rouge">wordpress-plugin</code> and are installed in <code class="highlighter-rouge">wp-content/plugins</code>. For more information about <code class="highlighter-rouge">composer/installers</code>, please read <a href="https://github.com/composer/installers">this guide</a>.</p>

<p>To make the extensions work, simply load Composer’s autoload file:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">require</span> <span class="s1">'vendor/autoload.php'</span><span class="p">;</span>
</code></pre></div></div>

<p>Now Meta Box extensions are available in your plugin/theme and you can start using them!</p>

<div class="alert alert-info">
	
		<svg class="icon icon-info" aria-hidden="true" role="img"><use href="#icon-info" xlink:href="#icon-info"></use></svg>
	
	<p>To make it easier for developers, I’ve created a composer.json file, which contains a full list of extensions, free and premium. You can <a href="https://github.com/wpmetabox/library/blob/master/composer/composer.json">grab it here</a> and remove the extensions you don’t want to use.</p>

</div>

<h2 id="video">Video</h2>

<p>This video demonstrates how to install Meta Box extensions from wordpress.org. The approach is slightly different between premium and free extensions.</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/khiCSMh3DY0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen=""></iframe>

<h2 id="versions--updates">Versions &amp; Updates</h2>

<p>For your information, we only provide the latest versions of extensions (<code class="highlighter-rouge">dev-master</code>). That means you can’t set specific versions in your <code class="highlighter-rouge">composer.json</code> file.</p>

<p>Due to that issue, when you run <code class="highlighter-rouge">composer update</code> command, you might see nothing as Composer can’t load versions to check. To avoid this update issue, instead of running <code class="highlighter-rouge">composer update</code>, please:</p>

<ul>
  <li>Remove the <code class="highlighter-rouge">vendor</code> folder</li>
  <li>Clear Composer cache</li>
  <li>Run <code class="highlighter-rouge">composer install</code> command again</li>
</ul>

<p>You can do that with this command:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>rm -rf vendor &amp;&amp; composer clear-cache &amp;&amp; composer install
</code></pre></div></div>

<h2 id="futher-reading">Futher reading</h2>

<ul>
  <li><a href="https://metabox.io/introducing-composer-support-for-meta-box-extensions/">Introducing Composer support for Meta Box extensions</a></li>
  <li><a href="https://metabox.io/how-to-use-composer-to-install-meta-box-extensions-from-wordpress-org/">How to use Composer to install Meta Box extensions from WordPress.org</a></li>
</ul>
:ET