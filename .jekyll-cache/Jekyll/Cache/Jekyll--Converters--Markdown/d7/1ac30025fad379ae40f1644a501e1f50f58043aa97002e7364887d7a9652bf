I"*F<h2 id="overview">Overview</h2>

<p>The post field allows you to select one or multiple post (or any custom post type) objects. This field has several settings that can be displayed as a: simple select dropdown, checkbox list, or beautiful select dropdown with select2 library.</p>

<p>If the post type is hierarchical, you are able to display the field as a select or checkbox tree, e.g. show childen posts when parent post is selected.</p>

<h2 id="screenshots">Screenshots</h2>

<p>Beautiful select with select2 library (default):</p>

<p><img src="https://i.imgur.com/jV4d0TW.png" alt="post select" /></p>

<p>Checkbox list:</p>

<p><img src="https://i.imgur.com/kWVBpgr.png" alt="post checkbox list" /></p>

<p>Checkbox tree:</p>

<p><img src="https://i.imgur.com/v6iiK1U.png" alt="post checkbox tree" /></p>

<p>Radio list:</p>

<p><img src="https://i.imgur.com/Vq8VNuD.png" alt="radio list" /></p>

<p>Radio list inline:</p>

<p><img src="https://i.imgur.com/WYhirO8.png" alt="radio list inline" /></p>

<p>Select tree:</p>

<p><img src="https://i.imgur.com/NYUdKkS.png" alt="post select tree" /></p>

<h2 id="settings">Settings</h2>

<p>Besides the <a href="/field-settings/">common settings</a>, this field has the following specific settings:</p>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="highlighter-rouge">post_type</code></td>
      <td>Post type. Can be string (for single post type) or array (for multiple post types). Required.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">query_args</code></td>
      <td>Query arguments for getting post objects. Uses same arguments as <a href="https://codex.wordpress.org/Class_Reference/WP_Query">WP_Query</a>. Optional.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">parent</code></td>
      <td>Whether or not to set the selected post as the parent for the current being edited post? <code class="highlighter-rouge">true</code> or <code class="highlighter-rouge">false</code> (default).</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">placeholder</code></td>
      <td>The placeholder for the select box. Default is “Select a {post label}”. Applied only when the <code class="highlighter-rouge">field_type</code> is a select field.</td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">field_type</code></td>
      <td>How the posts are displayed? See below.</td>
    </tr>
  </tbody>
</table>

<p>This field inherits the look and field (and settings) from other fields, depending on the <code class="highlighter-rouge">field_type</code>, which accepts the following value:</p>

<table>
  <thead>
    <tr>
      <th>Field type</th>
      <th>Description</th>
      <th>Settings inherited from</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="highlighter-rouge">select</code></td>
      <td>Simple select dropdown.</td>
      <td><a href="/fields/select/">select</a></td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">select_advanced</code></td>
      <td>Beautiful select dropdown using the select2 library. This is the default value.</td>
      <td><a href="/fields/select-advanced/">select_advanced</a></td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">select_tree</code></td>
      <td>Hierachical list of select boxes which allows to select multiple items (select/deselect parent item will show/hide child items). Applied only when the post type is hierarchical (like pages).</td>
      <td><a href="/fields/select/">select</a></td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">checkbox_list</code></td>
      <td>Flatten list of checkboxes which allows to select multiple items.</td>
      <td><a href="/fields/checkbox-list/">checkbox_list</a></td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">checkbox_tree</code></td>
      <td>Hierachical list of checkboxes which allows to select multiple items (select/deselect parent item will show/hide child items). Applied only when the post type is hierarchical (like pages).</td>
      <td><a href="/fields/checkbox-list/">checkbox_list</a></td>
    </tr>
    <tr>
      <td><code class="highlighter-rouge">radio_list</code></td>
      <td>Flatten list of radio boxes which allows to select only 1 item.</td>
      <td><a href="/fields/radio/">radio</a></td>
    </tr>
  </tbody>
</table>

<p>Note that for <code class="highlighter-rouge">select_tree</code>, <code class="highlighter-rouge">checkbox_list</code>, <code class="highlighter-rouge">checkbox_tree</code>, the <code class="highlighter-rouge">multiple</code> setting is always set to <code class="highlighter-rouge">true</code>.</p>

<h2 id="sample-code">Sample code</h2>

<p>This code shows pages in select2 dropdown:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">array</span><span class="p">(</span>
    <span class="s1">'name'</span>        <span class="o">=&gt;</span> <span class="s1">'Select a page'</span><span class="p">,</span>
    <span class="s1">'id'</span>          <span class="o">=&gt;</span> <span class="s1">'page'</span><span class="p">,</span>
    <span class="s1">'type'</span>        <span class="o">=&gt;</span> <span class="s1">'post'</span><span class="p">,</span>

    <span class="c1">// Post type.</span>
    <span class="s1">'post_type'</span>   <span class="o">=&gt;</span> <span class="s1">'page'</span><span class="p">,</span>

    <span class="c1">// Field type.</span>
    <span class="s1">'field_type'</span>  <span class="o">=&gt;</span> <span class="s1">'select_advanced'</span><span class="p">,</span>

    <span class="c1">// Placeholder, inherited from `select_advanced` field.</span>
    <span class="s1">'placeholder'</span> <span class="o">=&gt;</span> <span class="s1">'Select a page'</span><span class="p">,</span>

    <span class="c1">// Query arguments. See https://codex.wordpress.org/Class_Reference/WP_Query</span>
    <span class="s1">'query_args'</span>  <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'post_status'</span>    <span class="o">=&gt;</span> <span class="s1">'publish'</span><span class="p">,</span>
        <span class="s1">'posts_per_page'</span> <span class="o">=&gt;</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span>
    <span class="p">),</span>
<span class="p">),</span>
</code></pre></div></div>

<p>The code below shows pages in a checkbox tree format:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">array</span><span class="p">(</span>
    <span class="s1">'name'</span>        <span class="o">=&gt;</span> <span class="s1">'Select a page'</span><span class="p">,</span>
    <span class="s1">'id'</span>          <span class="o">=&gt;</span> <span class="s1">'page'</span><span class="p">,</span>
    <span class="s1">'type'</span>        <span class="o">=&gt;</span> <span class="s1">'post'</span><span class="p">,</span>

    <span class="c1">// Post type.</span>
    <span class="s1">'post_type'</span>   <span class="o">=&gt;</span> <span class="s1">'page'</span><span class="p">,</span>

    <span class="c1">// Field type.</span>
    <span class="s1">'field_type'</span>  <span class="o">=&gt;</span> <span class="s1">'checkbox_tree'</span><span class="p">,</span>
<span class="p">),</span>
</code></pre></div></div>

<h2 id="ajax-load">Ajax Load</h2>

<p>Since version 5.2, Meta Box uses Ajax to increase the performance for the field query. Instead of fetching all posts at once, the plugin now fetches only some posts when the page is loaded, and then fetches more posts when users scroll down to the list.</p>

<p>See this video for demonstration:</p>

<div style="position: relative; padding-bottom: 56.25%; height: 0;"><iframe src="https://www.loom.com/embed/0437f466379e4a328fb4fcae11cd3bf5" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen="" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"></iframe></div>

<p>This feature is <em>available only for fields that set <code class="highlighter-rouge">field_type</code> to <code class="highlighter-rouge">select_advanced</code></em>. There are some extra parameters for you to disable or customize it.</p>

<h3 id="enabledisable-ajax-requests">Enable/Disable Ajax Requests</h3>

<p>To enable the Ajax requests, simply add <code class="highlighter-rouge">'ajax' =&gt; true</code> (which is added by default) to the field:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">array</span><span class="p">(</span>
    <span class="s1">'id'</span> <span class="o">=&gt;</span> <span class="s1">'project'</span><span class="p">,</span>
    <span class="s1">'title'</span> <span class="o">=&gt;</span> <span class="s1">'Project'</span><span class="p">,</span>
    <span class="s1">'type'</span> <span class="o">=&gt;</span> <span class="s1">'post'</span><span class="p">,</span>
    <span class="s1">'post_type'</span> <span class="o">=&gt;</span> <span class="s1">'project'</span><span class="p">,</span>
    <span class="s1">'ajax'</span> <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span> <span class="c1">// THIS</span>
<span class="p">),</span>
</code></pre></div></div>

<p>Setting this parameter to <code class="highlighter-rouge">false</code> will disable Ajax requests, making it work exactly the same as in previous versions.</p>

<h3 id="limit-the-number-of-posts-for-pagination">Limit The Number of Posts for Pagination</h3>

<p>Similar to the previous version, the number of posts for pagination is set via the <code class="highlighter-rouge">posts_per_page</code> in the <code class="highlighter-rouge">query_args</code> parameter:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">array</span><span class="p">(</span>
    <span class="s1">'id'</span> <span class="o">=&gt;</span> <span class="s1">'project'</span><span class="p">,</span>
    <span class="s1">'title'</span> <span class="o">=&gt;</span> <span class="s1">'Project'</span><span class="p">,</span>
    <span class="s1">'type'</span> <span class="o">=&gt;</span> <span class="s1">'post'</span><span class="p">,</span>
    <span class="s1">'post_type'</span> <span class="o">=&gt;</span> <span class="s1">'project'</span><span class="p">,</span>
    <span class="s1">'ajax'</span> <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
    <span class="s1">'query_args'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'posts_per_page'</span> <span class="o">=&gt;</span> <span class="mi">10</span><span class="p">,</span> <span class="c1">// THIS</span>
    <span class="p">),</span>
<span class="p">),</span>
</code></pre></div></div>

<p>Unlike in previous versions, this number is used only for Ajax requests to fetch the next bunch of posts. The new fetched posts will be appended to the list of options in the dropdown, to make the infinite scroll effect.</p>

<p>It also <em>doesn’t affect the initial load</em> of the field. When the field is loaded, Meta Box <em>only queries for saved posts</em> (which is usually not many). So the initial query is very minimal and doesn’t cause any performance problem.</p>

<h3 id="searching-parameters">Searching Parameters</h3>

<p>You probably don’t want to perform an Ajax request when open the dropdown at first. You might want to <em>make Ajax requests only when users type something</em> and search for that. To do that, you need to set the <code class="highlighter-rouge">minimumInputLengthfor</code> the input, as below:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">array</span><span class="p">(</span>
    <span class="s1">'id'</span> <span class="o">=&gt;</span> <span class="s1">'project'</span><span class="p">,</span>
    <span class="s1">'title'</span> <span class="o">=&gt;</span> <span class="s1">'Project'</span><span class="p">,</span>
    <span class="s1">'type'</span> <span class="o">=&gt;</span> <span class="s1">'post'</span><span class="p">,</span>
    <span class="s1">'post_type'</span> <span class="o">=&gt;</span> <span class="s1">'project'</span><span class="p">,</span>
    <span class="s1">'ajax'</span> <span class="o">=&gt;</span> <span class="kc">true</span><span class="p">,</span>
    <span class="s1">'query_args'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'posts_per_page'</span> <span class="o">=&gt;</span> <span class="mi">10</span><span class="p">,</span>
    <span class="p">),</span>
    <span class="s1">'js_options'</span> <span class="o">=&gt;</span> <span class="k">array</span><span class="p">(</span>
        <span class="s1">'minimumInputLength'</span> <span class="o">=&gt;</span> <span class="mi">1</span><span class="p">,</span> <span class="c1">// THIS</span>
    <span class="p">),</span>
<span class="p">),</span>
</code></pre></div></div>

<p>This parameter sets the minimum number of characters required to start a search. It may be good if you don’t want users to make too many Ajax requests that could harm your server.</p>

<h2 id="data">Data</h2>

<p>This field saves post ID(s) in the database.</p>

<p>If field is not <code class="highlighter-rouge">multiple</code>, then a single post ID is saved in the database. Otherwise, the field saves multiple post IDs in the database, where each post ID is store in a single row in the database with the same meta key (similar to what <code class="highlighter-rouge">add_post_meta</code> does with last parameter <code class="highlighter-rouge">false</code>).</p>

<p>If the field is cloneable, then the value is stored as a serialized array in a single row in the database.</p>

<p>If <code class="highlighter-rouge">parent</code> settings is set to <code class="highlighter-rouge">true</code>, this field doesn’t save any data. Instead, it sets the selected post as the parent for the current being edited post.</p>

<h2 id="template-usage">Template usage</h2>

<p>If field is not <code class="highlighter-rouge">multiple</code>, getting value is simple:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$post_id</span> <span class="o">=</span> <span class="nx">rwmb_meta</span><span class="p">(</span> <span class="nv">$field_id</span> <span class="p">);</span>
<span class="k">echo</span> <span class="nx">get_the_title</span><span class="p">(</span> <span class="nv">$post_id</span> <span class="p">);</span>
</code></pre></div></div>

<p>If field is <code class="highlighter-rouge">multiple</code>, you can loop through the returned values like this:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$post_ids</span> <span class="o">=</span> <span class="nx">rwmb_meta</span><span class="p">(</span> <span class="nv">$field_id</span> <span class="p">);</span>
<span class="k">foreach</span> <span class="p">(</span> <span class="nv">$post_ids</span> <span class="k">as</span> <span class="nv">$post_id</span> <span class="p">)</span> <span class="p">{</span>
    <span class="k">echo</span> <span class="s1">'&lt;p&gt;'</span><span class="p">,</span> <span class="nx">get_the_title</span><span class="p">(</span> <span class="nv">$post_id</span> <span class="p">),</span> <span class="s1">'&lt;/p&gt;'</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>If you just want to output selected posts in an unordered list, use this code:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">rwmb_the_value</span><span class="p">(</span> <span class="nv">$field_id</span> <span class="p">);</span>
</code></pre></div></div>

<p>Read more about <a href="/rwmb-meta/">rwmb_meta()</a> and <a href="/rwmb-the-value/">rwmb_the_value()</a>.</p>

<h2 id="filters">Filters</h2>

<p><code class="highlighter-rouge">rwmb_post_choice_label</code> and <code class="highlighter-rouge">rwmb_{$field_id}_choice_label</code></p>

<p>These filters allow developers to change the label of <code class="highlighter-rouge">post</code> fields. The 1st label applies to all <code class="highlighter-rouge">post</code> fields, and the later for a specific field.</p>

<p>Example: If you are using a field called <code class="highlighter-rouge">my_field</code> and you want to change the label, use the code below:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">function</span> <span class="nf">my_field_filter</span><span class="p">(</span> <span class="nv">$label</span><span class="p">,</span> <span class="nv">$field</span><span class="p">,</span> <span class="nv">$post</span> <span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nv">$post</span><span class="o">-&gt;</span><span class="na">post_title</span> <span class="o">.</span> <span class="s1">' - '</span> <span class="o">.</span> <span class="nv">$post</span><span class="o">-&gt;</span><span class="na">post_status</span><span class="p">;</span>
<span class="p">}</span>
<span class="nx">add_filter</span><span class="p">(</span> <span class="s1">'rwmb_my_field_choice_label'</span><span class="p">,</span> <span class="s1">'my_field_filter'</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span>
</code></pre></div></div>
:ET